{"version":3,"sources":["logo.svg","pages/homepage/homepage.js","pages/chat/chat.jsx","Components/scroll/scroll.js","Components/chat-item/chat-item.js","Components/header/header.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Homepage","Chat","this","props","name","message","title","linkUrl","match","history","React","createElement","className","paragraph","container","Component","withRouter","Scroll","style","overflowY","height","children","chatItem","chatSend","input","document","querySelector","value","setState","chatChange","state","chats","push","console","log","id","map","otherSectionProps","key","align","type","placeholder","required","onClick","Header","to","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"yIAAAA,EAAOC,QAAU,IAA0B,kC,2ICY5BC,G,kBAVE,WACb,OACI,6BACI,uCACA,sJ,qDCANC,G,mLACS,IAAD,EACuCC,KAAKC,MAA3CC,EADD,EACCA,KAAKC,EADN,EACMA,QACNC,GAFA,EACcC,QADd,EACsBC,MADtB,EAC4BC,QACpBC,IAAMC,cAAc,KAAM,CAACC,UAAY,SAAvC,UAAoDR,KAC5DS,EAAYH,IAAMC,cAAc,OAAQ,GAA5B,UAAmCN,IAC/CS,EAAYJ,IAAMC,cAAc,MAAO,CAACC,UAAY,QAAS,CAACN,EAAOO,IAC3E,OACI,6BACMC,O,GARCJ,IAAMK,YAeVC,cAAWf,GCTXgB,EAVA,SAAEd,GAChB,OACC,yBAAKe,MAAO,CAACC,UAAY,OAAUC,OAAS,UAC3CjB,EAAMkB,WCmEMC,E,kDAlEP,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IAyBVoB,SAAW,WACP,IAAIC,EAAQC,SAASC,cAAc,SAChCF,EAAMG,QACL,EAAKC,SAAS,CAACC,WAAaL,EAAMG,QACnC,EAAKG,MAAMC,MAAMC,KAAK,CAAC,QAAYR,EAAMG,QACxCH,EAAMG,MAAQ,GACfM,QAAQC,IAAIV,EAAMG,SA9BrB,EAAKG,MAAQ,CACTC,MAAQ,CACJ,CACII,GAAK,EACL/B,KAAO,QACPC,QAAU,eACVE,QAAU,SAEd,CACI4B,GAAK,EACL/B,KAAK,QACLC,QAAU,2BACVE,QAAU,SAEd,CACI4B,GAAG,EACH/B,KAAM,SACNC,QAAQ,yBACRE,QAAU,WAGtBsB,WAAa,IAvBE,E,qDAsCf,OACI,6BACA,kBAAC,EAAD,KAEQ3B,KAAK4B,MAAMC,MAAMK,KAAI,gBAAGD,EAAH,EAAGA,GAAOE,EAAV,6BACzB,kBAAC,EAAD,eAAMC,IAAKH,GAAQE,QAIvB,6BAAM,6BAAM,6BACZ,yBAAKzB,UAAU,aACX,2BACJ2B,MAAM,SACNC,KAAK,OACLC,YAAY,YACZC,UAAQ,IAER,4BAAQC,QAASzC,KAAKqB,UAAtB,c,GAxDOb,IAAMK,WCUd6B,G,MAXA,WACX,OACI,6BACI,kBAAC,IAAD,CAAMC,GAAK,KAAX,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,QACA,kBAAC,IAAD,CAAMA,GAAK,WAAX,aCcGC,MAff,WACE,OACE,yBAAKlC,UAAU,OAEf,kBAAC,IAAD,KACA,kBAAC,EAAD,MACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,QAAQC,UAAWjD,IACrC,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,SAASC,UAAW3B,QCJ9B4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7C,MACvB,2DCZN8C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF/B,SAASgC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhC,QAAQgC,MAAMA,EAAM5D,c","file":"static/js/main.66708ec2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Welcome</h1>\r\n            <h2>It is specially dedicated to our developer community to easily communicate with each other wuthout any distraction.</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Homepage;","import React from 'react'\r\nimport './chat.scss'\r\nimport 'tachyons'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass Chat extends React.Component {\r\n    render () {\r\n        const {name,message,linkUrl,match,history} = this.props;\r\n        const title = React.createElement('h3', {className : \"point\"}, `${name}`);\r\n        const paragraph = React.createElement('span', {}, `${message}`);\r\n        const container = React.createElement('div', {className : \"divs\"}, [title, paragraph]);\r\n        return (\r\n            <div>\r\n                { container }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Chat) ","import React from 'react';\r\n\r\nconst Scroll = ( props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY : \"auto\"  , height : \"400px\"}} >\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n\t\t\r\n}\r\n\r\n\r\nexport default Scroll;","import React from 'react'\r\nimport Chat from '../../pages/chat/chat'\r\nimport Scroll from '../scroll/scroll'\r\n\r\n\r\nclass chatItem extends React.Component {\r\n        constructor(props) {\r\n            super(props)\r\n            this.state = {\r\n                chats : [\r\n                    {\r\n                        id : 1,\r\n                        name : \"Sahil\",\r\n                        message : \"heelo there!\",\r\n                        linkUrl : \"sahil\"\r\n                    },\r\n                    {\r\n                        id : 2,\r\n                        name:\"Naman\",\r\n                        message : \"hello sahil,how are you?\",\r\n                        linkUrl : \"naman\"\r\n                    },\r\n                    {\r\n                        id:3,\r\n                        name :\"hariom\",\r\n                        message:\"what's going on at all\",\r\n                        linkUrl : \"hariom\"\r\n                    }\r\n                ],\r\n            chatChange : \"\"\r\n            }\r\n        }\r\n        chatSend = ( ) => {\r\n            var input = document.querySelector(\"input\");\r\n            if(input.value) {\r\n                this.setState({chatChange : input.value})\r\n               this.state.chats.push({\"message\" : input.value});\r\n                input.value = \"\"\r\n               console.log(input.value)\r\n            }\r\n            \r\n        }\r\n\r\n        render () {\r\n            return (\r\n                <div>\r\n                <Scroll>\r\n                    {\r\n                        this.state.chats.map(({ id, ...otherSectionProps }) => (\r\n                    <Chat key={id} {...otherSectionProps} />\r\n                  ))\r\n                }\r\n                </Scroll>\r\n                <br /><br /><br />\r\n                <div className=\"chatInput\">\r\n                    <input \r\n                align=\"bottom\" \r\n                type=\"text\"  \r\n                placeholder=\"Type here\"\r\n                required \r\n                />\r\n                <button onClick={this.chatSend}  >Send</button>\r\n                </div>\r\n                \r\n                </div>\r\n                \r\n\r\n            )\r\n        }\r\n}\r\n\r\n\r\nexport default chatItem;","import React from 'react' \r\nimport './header.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <Link to = \"/\">Home</Link>\r\n            <Link to=\"/chats\">Chat</Link>\r\n            <Link to = \"/logout\">Logout</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Homepage from './pages/homepage/homepage';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport chatItem from './Components/chat-item/chat-item';\nimport Header from './Components/header/header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n    <BrowserRouter>\n    <Header />\n        <Switch>\n            <Route exact path=\"/chat\" component={Homepage} />\n            <Route exact path=\"/chats\" component={chatItem} />\n        </Switch>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}